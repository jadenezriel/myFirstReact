{"version":3,"sources":["logo.svg","components/Greet.js","components/Message.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Greet","props","name","nickname","children","Message","Button","addCounter","setState","count","state","onClick","this","React","Component","App","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAAe,G,MAAA,IAA0B,kC,eCS1BA,EATD,SAACC,GACX,OACQ,gCACA,wCAAWA,EAAMC,KAAjB,QAA4BD,EAAME,YACjCF,EAAMG,aCAJC,EAJA,WACR,OAAO,gD,4BC4BCC,E,kDAzBX,aAAc,IAAD,8BACT,gBAMJC,WAAa,WACT,EAAKC,SACG,CACIC,MAAQ,EAAKC,MAAMD,MAAO,KARtC,EAAKC,MAAQ,CACTD,MAAQ,GAHH,E,0CAeb,WACI,OACQ,gCACA,wBAAQE,QAAWC,KAAKL,WAAxB,6BACR,0CAAaK,KAAKF,MAAMD,gB,GArBXI,IAAMC,WC8BZC,MA1Bf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,qCAGA,eAAC,EAAD,CAAOjB,KAAK,QAAQC,SAAS,WAA7B,UACA,cAAC,EAAD,IACA,cAAC,EAAD,OAGA,mBACEa,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCPOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.25a80b46.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const Greet = (props) => {\n    return (\n            <div>\n            <h1>Hello {props.name} aka {props.nickname}</h1>\n            {props.children}\n            </div>\n           )\n        }\n\nexport default Greet","const Message =() =>{\n       return <p>children props</p>\n        }\n\nexport default Message","import React from \"react\";\n\nclass Button extends React.Component{\n    \n    constructor(){\n        super()\n        this.state = {\n            count : 0\n        }\n    }\n    \n    addCounter = () => {\n        this.setState(\n                {\n                    count : this.state.count +1\n        }\n                )\n    }\n    \n    render(){\n        return (\n                <div>\n                <button onClick = {this.addCounter}>Don't click me!</button>\n        <p>counts = {this.state.count}</p>\n        </div>\n        )\n    }\n}\n\nexport default Button","import logo from './logo.svg';\nimport './App.css';\nimport Greet from './components/Greet';\nimport Message from './components/Message';\nimport Button from './components/Button';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.   ---jaden\n        </p>\n        <Greet name=\"Peter\" nickname=\"the Rock\">\n        <Message/>\n        <Button/>\n            </Greet>\n        \n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}